version: "3"
services:
  app:
    build: express-mongo-app
    expose:
    - 3000
    ports:
      - 3000:3000
    restart: always
    networks:
    - beingzero
    environment:
    - "WEB_PORT=3000"
    - "MONGO_PROD_CONSTRING=mongodb://mongo1:27017,mongo2:27017,mongo3:27017/todoDB?replicaSet=rs0"
    - "MONGO_DEV_CONSTRING=mongodb://localhost:27011,localhost:27012,localhost:27013/todoDB?replicaSet=rs0"
    depends_on:
    - mongo1
    - mongo2
    - mongo3
    - mongosetup
    
  mongo1:
    hostname: mongo1
    image: mongo:latest
    expose:
    - 27017
    healthcheck:
      test: ["CMD-SHELL", 'mongo --eval "printjson(db.serverStatus())"']
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - 27011:27017
    restart: always
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "rs0" ]
    networks:
    - beingzero
    
  mongo2:
    hostname: mongo2
    image: mongo:latest
    expose:
    - 27017
    healthcheck:
      test: ["CMD-SHELL", 'mongo --eval "printjson(db.serverStatus())"']
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
    - 27012:27017
    restart: always
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "rs0" ]
    networks:
    - beingzero
    
  mongo3:
    hostname: mongo3
    image: mongo:latest
    expose:
    - 27017
    healthcheck:
      test: ["CMD-SHELL", 'mongo --eval "printjson(db.serverStatus())"']
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
    - 27013:27017
    restart: always
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "rs0" ]
    networks:
    - beingzero

  mongosetup:
    image: mongo:latest
    links:
      - mongo1:mongo1
      - mongo2:mongo2
      - mongo3:mongo3
    depends_on:
      - mongo1
      - mongo2
      - mongo3
    healthcheck:
      test: ["CMD-SHELL", 'mongo --eval "printjson(db.serverStatus())"']
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - ./scripts:/scripts
    restart: "no"
    entrypoint: [ "bash", "/scripts/repl_setup.sh" ]
    networks:
    - beingzero

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_SERVER: "mongo1,mongo2,mongo3"
    depends_on:
      - mongosetup
      - app

networks:
  beingzero: